name: cynnexis/latex CI/CD

on:
  push:
    branches:
      - master
      - 'cicd/**'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-20.04
    name: Build the Docker image and send it to Docker Hub
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare files for production
        run: |
          sudo apt-get update
          sudo apt-get install -qqy make
          DEBUG=false make --no-print-directory texlive.profile
      - name: Get the project version
        run: |
          project_version=$(cat VERSION)
          echo "project_version=$project_version" >> $GITHUB_ENV
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image to Docker Hub
        id: build_push
        uses: docker/build-push-action@v2
        with:
          tags: cynnexis/latex:latest,cynnexis/latex:${{ env.project_version }}
          push: true
          context: .
          build-args: PROJECT_VERSION="${{ env.project_version }}"
      - name: Inspect built image
        run: |
          echo "Image ID:              ${{ steps.build_push.outputs.imageid }}"
          echo "Image digest:          ${{ steps.build_push.outputs.digest }}"
          echo "Build result metadata: ${{ steps.build_push.outputs.metadata }}"
      - name: Test the Docker image
        run: make test

  release:
    runs-on: ubuntu-20.04
    name: Create a release
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get the project version
        run: |
          project_version=$(cat VERSION)
          echo "project_version=$project_version" >> $GITHUB_ENV
      - name: Create a release for the Docker image
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.project_version }}
          release_name: ${{ env.project_version }}
          body: "Ref: ${{ github.ref }} SHA: ${{ github.sha }}"
          draft: true
          prerelease: false
